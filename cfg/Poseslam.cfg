#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_poseslam'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#        Name                              Type       Reconfig. level  Description                                          Default   Min   Max
gen.add("match_area_x",                    double_t,  0,               "Matching area for loop closure (x)",                 3.0,      0.0        )
gen.add("match_area_y",                    double_t,  0,               "Matching area for loop closure (y)",                 3.0,      0.0        )
gen.add("match_area_th",                   double_t,  0,               "Matching area for loop closure (theta)",             0.2617994, 0.0        )
gen.add("pd_range_1",                      double_t,  0,               "Prob. threshold for try loop closure",               0.1,      0.0,   1.0 )
gen.add("pd_range_2",                      double_t,  0,               "Prob. threshold for redundant pose",                 0.9,      0.0,   1.0 )
gen.add("ig_range_1",                      double_t,  0,               "Information gain threshold for redundant pose",      7.0,      0.0        )
gen.add("ig_range_2",                      double_t,  0,               "Information gain threshold for try loop closure",    9.0,      0.0        )
gen.add("ignore_previous_steps",           int_t,     0,               "Number of previous steps to ignore in loop closure", 1,        1          )
gen.add("K_mahalanobis",           double_t,     0,               "Mahalanobis distance in the outlier detection in loop closure", 3.3682,        0          )
#Kvalues
#99% - 3.3682
#95% - 2.7955
#90% - 2.5003

exit(gen.generate(PACKAGE, "PoseslamAlgorithm", "Poseslam"))
